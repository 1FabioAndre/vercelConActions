# .github/workflows/deployment_vercel_backend.yml
name: Deploy to Vercel

on:
  push:
    branches:
      - vercelbranch
      - staging

jobs:
  deployment_vercel_backend_production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/vercelbranch'
    environment: production
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Set Environment Variables
        run: |
          echo "PGHOST=${{ secrets.PGHOST }}" > ../../.env
          echo "PGDATABASE=${{ secrets.PGDATABASE }}" >> ./server/.env
          echo "PGUSER=${{ secrets.PGUSER }}" >> ./server/.env
          echo "PGPASSWORD=${{ secrets.PGPASSWORD }}" >> ./server/.env
          echo "PGPORT=${{ secrets.PGPORT }}" >> ./server/.env
          echo "REACT_APP_AUTH_TOKEN=${{ secrets.REACT_APP_AUTH_TOKEN }}" >> ./server/.env

      - name: Install Vercel CLI
        run: |
          cd ./server
          npm install -g vercel

      - name: Deploy to Vercel (Production)
        run: |
          cd ./server
          vercel deploy --prod --token ${{ secrets.VERCEL_TOKEN }} -y

  deployment_vercel_backend_staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    environment: staging
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Set Environment Variables
        run: |
          echo "PGHOST=${{ secrets.PGHOST }}" > ../../.env
          echo "PGDATABASE=${{ secrets.PGDATABASE }}" >> ./server/.env
          echo "PGUSER=${{ secrets.PGUSER }}" >> ./server/.env
          echo "PGPASSWORD=${{ secrets.PGPASSWORD }}" >> ./server/.env
          echo "PGPORT=${{ secrets.PGPORT }}" >> ./server/.env
          echo "REACT_APP_AUTH_TOKEN=${{ secrets.REACT_APP_AUTH_TOKEN }}" >> ./server/.env

      - name: Install Vercel CLI
        run: |
          cd ./server
          npm install -g vercel

      - name: Deploy to Vercel (Staging)
        run: |
          cd ./server
          vercel deploy --token ${{ secrets.VERCEL_TOKEN }} -y
